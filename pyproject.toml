[project]
name = "template"
version = "0.1.0"
description = "Add your description here"
authors = [{ name = "Ricardo Quintero", email = "rquinterog93@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12"

[dependency-groups]
dev = [
  "ipython>=9.0.2",
  "neovim>=0.3.1",
  "pip>=25.0.1",
  "pynvim>=0.5.2",
  "sqlfluff>=3.3.1",
  "visidata>=3.1.1",
  "taskipy>=1.12.2",
  "ruff>=0.4.0",
  "pytest>=8.1.1",
  "basedpyright>=1.10.5",
]

[tool.basedpyright]
ignore = ['*']
typeCheckingMode = "standard"
reportMissingImports = "error"
reportMissingTypeStubs = "information"
reportArgumentType = "information"
reportCallIssue = "information"

[tool.ruff]
fix = true
line-length = 120
exclude = ["*/.venv"]

[tool.ruff.lint]
select = ["B", "E", "F", "I", "Q", "S", "NPY", "PD", "W", "RUF"]
ignore = ["S101","S301", "PD901", "RUF013"]

[tool.sqlfluff.core]
dialect = "postgres"
rules = "all"
output_line_length = 120
processes = -1
exclude_rules = "RF01"
max_line_length = 120
large_file_skip_byte_limit = 0
[tool.sqlfluff.indentation]
indented_joins = false
indent_using_on = true
template_blocks_indent = false
indent_unit = "space"
tab_space_size = 4

[tool.taskipy.tasks]
# Run tests with check for the presence of test files
test = "test -d tests && pytest || echo 'No tests found, skipping...'"
# Static type checking
typecheck = "basedpyright"
# Clean build artifacts
clean = "rm -rf __pycache__ .pytest_cache .mypy_cache dist build *.egg-info"
# Run Streamlit app with check for app file
app = "test -f src/app.py && streamlit run src/app.py || echo 'No Streamlit app found, skipping...'"
# Python Lint only
lint = "ruff check ."
# Format & autofix everything Ruff can
format = "ruff check . --fix && ruff format ."
# SQL Lint with fallback if no SQL files
sqllint = "test -d sql && sqlfluff lint sql/ || echo 'No SQL to lint, skipping...'"
# SQL Format with fallback if no SQL files
sqlformat = "test -d sql && sqlfluff fix sql/ && sqlfluff format sql/ || echo 'No SQL to format, skipping...'"
# Full project health check
check = "task clean && task lint && task sqllint && task typecheck && task test"
